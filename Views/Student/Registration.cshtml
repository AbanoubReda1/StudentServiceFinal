@model StudentService.Models.Student

@{

    Layout = null;
}

@* <h2>Registration</h2>

    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Sucsess</strong>@ViewBag.Message
            </div>
        }

    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                @Html.ValidationMessage("Level must be insert", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.StudentEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentEmail, "", new { @class = "text-danger" })
                @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ConfiremPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfiremPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfiremPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
        }
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
<!--

  copyright:StudentService Team

Design
=========================================================
Material Kit - v2.0.7
=========================================================


 Creative Tim

=========================================================

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <link rel="apple-touch-icon" sizes="76x76" href="~/assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="~/assets/img/favicon.png">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>
        StudentService
    </title>
    <meta content='width=device-width, initial-scale=1.0, shrink-to-fit=no' name='viewport' />
    <!--     Fonts and icons     -->
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css">
    <!-- CSS Files -->
    <link href="~/assets/css/material-kit.css?v=2.0.7" rel="stylesheet" />
    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link href="~/assets/demo/demo-kit.css" rel="stylesheet" />
</head>
@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Sucsess @ViewBag.Message</strong>
        </div>
    }

}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <body class="login-page sidebar-collapse">
            <nav class="navbar navbar-transparent navbar-color-on-scroll fixed-top navbar-expand-lg" color-on-scroll="100" id="sectionsNav">
                <div class="container">
                    <div class="navbar-translate">
                        <a class="navbar-brand" href="@Url.Action("Index","Home")">
                            StudentService
                        </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="navbar-toggler-icon"></span>
                            <span class="navbar-toggler-icon"></span>
                            <span class="navbar-toggler-icon"></span>
                        </button>
                    </div>
                    <div class="collapse navbar-collapse">
                        <ul class="navbar-nav ml-auto">

                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Login","Student")" >
                                    <i class="material-icons">unarchive</i>Login
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link">
                                    <i class="fa fa-twitter"></i>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link">
                                    <i class="fa fa-facebook-square"></i>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link">
                                    <i class="fa fa-instagram"></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>



            <div class="page-header header-filter" style="background-image: url('/assets/img/bg7.jpg'); background-size: cover; background-position: top center;">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-9 col-md-6 ml-auto mr-auto">
                            <div class="card card-login">
                                <form class="form">
                                    <div class="card-header card-header-primary text-center">
                                        <h4 class="card-title">Registration</h4>
                                        <div class="social-line">
                                            <a href="#pablo" class="btn btn-just-icon btn-link">
                                                <i class="fa fa-facebook-square"></i>
                                            </a>
                                            <a href="#pablo" class="btn btn-just-icon btn-link">
                                                <i class="fa fa-twitter"></i>
                                            </a>
                                            <a href="#pablo" class="btn btn-just-icon btn-link">
                                                <i class="fa fa-google-plus"></i>
                                            </a>
                                        </div>
                                    </div>

                                    <div class="card-body">

                                        <div class="row">
                                            <div class="col">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="material-icons">
                                                            perm_identity
                                                        </span>
                                                    </div>

                                                    @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control", placeholder = "FUE ID..." } })
                                                    @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                                                    @Html.ValidationMessage("IDExist", new { @class = "text-danger" })
                                                </div>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">
                                                            <i class="material-icons">face</i>
                                                        </span>
                                                    </div>

                                                    @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", placeholder = "Name..." } })
                                                    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">
                                                            <i class="material-icons">mail</i>
                                                        </span>
                                                    </div>

                                                    @Html.EditorFor(model => model.StudentEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Email..." } })
                                                    @Html.ValidationMessageFor(model => model.StudentEmail, "", new { @class = "text-danger" })
                                                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                                                </div>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="material-icons">
                                                            format_list_numbered
                                                        </span>
                                                    </div>

                                                    @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control", placeholder = "Level..." } })
                                                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col">

                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="material-icons">
                                                            today
                                                        </span>
                                                    </div>

                                                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", placeholder = "DateOfBirth" } })
                                                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                                </div>


                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="material-icons">
                                                            call
                                                        </span>
                                                    </div>

                                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", placeholder = "phone Number" } })
                                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="material-icons">
                                                            lock
                                                        </span>
                                                    </div>

                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="material-icons">
                                                            lock
                                                        </span>
                                                    </div>
                                                    @Html.EditorFor(model => model.ConfiremPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "ConfiremPassword" } })
                                                    @Html.ValidationMessageFor(model => model.ConfiremPassword, "", new { @class = "text-danger" })
                                                </div>


                                            </div>



                                        </div>

                                    </div>


                                </form>

                            </div>
                            <div class="footer text-center">
                                <input type="submit" class="btn btn-primary" value="Create" />
                            </div>
                        </div>
                    </div>
                </div>

                <footer class="footer">
                    <div class="container">
                        <nav class="float-left">

                        </nav>
                    </div>
                </footer>
            </div>

            <!--   Core JS Files   -->
            <script src="~/assets/js/core/jquery.min.js" type="text/javascript"></script>
            <script src="~/assets/js/core/popper.min.js" type="text/javascript"></script>
            <script src="~/assets/js/core/bootstrap-material-design.min.js" type="text/javascript"></script>
            <script src="~/assets/js/plugins/moment.min.js"></script>
            <!--	Plugin for the Datepicker, full documentation here: https://github.com/Eonasdan/bootstrap-datetimepicker -->
            <script src="~/assets/js/plugins/bootstrap-datetimepicker.js" type="text/javascript"></script>
            <!--  Plugin for the Sliders, full documentation here: http://refreshless.com/nouislider/ -->
            <script src="~/assets/js/plugins/nouislider.min.js" type="text/javascript"></script>
            <!--  Google Maps Plugin    -->
            <!-- Control Center for Material Kit: parallax effects, scripts for the example pages etc -->
            <script src="~/assets/js/material-kit.js?v=2.0.7" type="text/javascript"></script>
        </body>
    }
}

</html>